package VietnammanualSanity;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement; 
import java.util.Properties;
import java.util.Set;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import VietnammanualSanity.Forexrepair;

import org.openqa.selenium.WebDriver;

public class Forexfcymain {

	public static void main(String[] args) throws SQLException {
		
		Forexrepair abc = new Forexrepair();
		
		 Connection conn = null;
		  
		  String columnValue= null;
	  try
	  
	  
	  
	  {
		  Class.forName("oracle.jdbc.driver.OracleDriver");  
	  //PropertyFileRelatedFunctions propertyObject = new PropertyFileRelatedFunctions();
		  conn=DriverManager.getConnection(  
				  "jdbc:oracle:thin:@172.21.157.157:1521:ORCL","rippledb","rippledb_123");  
	 
 String sql = "select unique_ref_num from automation"; 
	PreparedStatement stmt= conn.prepareStatement(sql); 
	ResultSet RemittanceId = stmt.executeQuery(sql);
	 
	  ResultSetMetaData rsmd = RemittanceId.getMetaData();
	  int columnsNumber = rsmd.getColumnCount();
	  
	  
	  while (RemittanceId.next()) {
	      for (int i = 1,j=0; i <= columnsNumber; i++,j=j+2) {
	          if (i > 1) System.out.print("||| ");
	           columnValue = RemittanceId.getString(i);
	          //String abc=String.parseInt(columnValue);
	           WebDriver driver = abc.LogInunitaryrepairhcm();
		          abc.forexFCYRepairunitary(driver, columnValue,j);
		         
	          System.out.print(columnValue + "--- " + rsmd.getColumnName(i));
	      }
	      System.out.println("|");
	  
	 
	  
	  }
	  while (RemittanceId.next()) {
	      for (int i = 1,j=0; i <= columnsNumber; i++,j=j+2) {
	          if (i > 1) System.out.print("||| ");
	           columnValue = RemittanceId.getString(i);
	          
	           WebDriver driver = abc.LogInauthunitaryhcm();
		          abc.AuthRem(driver, columnValue,j);
		         
	          System.out.print(columnValue + "--- " + rsmd.getColumnName(i));
	      }
	      System.out.println("|");
	  
	 
	  
	  }
	  }catch(Exception e)
	  {
		  
	  }
	  finally{
		  conn.close(); 
	  }
	  
	  }
}
	  
	  
	  

