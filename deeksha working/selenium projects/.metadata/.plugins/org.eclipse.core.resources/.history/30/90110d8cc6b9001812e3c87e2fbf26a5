package walletHubReviewCheck;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;


public class CommonMeths {

	public static WebDriver driver;
	  
	  public static WebDriver selectBrowser(String argument, String brsName) {
		
		if (brsName.equalsIgnoreCase("chrome")) {
			  System.setProperty("webdriver.chrome.driver", ConstantsDeclared.chromedriverexe);
			 driver = new ChromeDriver();
			 // Implicit wait command	
			 driver.manage().timeouts().implicitlyWait(40, TimeUnit.SECONDS);
		} else if (brsName.equalsIgnoreCase("firefox")) {
			 System.setProperty("webdriver.gecko.driver", ConstantsDeclared.firefoxdriverexe);
			  
			   driver = new FirefoxDriver();
		} else {
			System.out.println("Browser name is wrong");
		}
		return driver;
	  }
	  
	  public static void openUrl(String Url)
	  {
		  driver.get(Url);
	  }
	  public static void handlingmousehoveringwithoutClick(String propertyAttribute, String ipName) throws Exception {
		  	WebElement hoveronStars = driver.findElement(locatorread.readingPropertyValues(propertyAttribute));
			Actions act = new Actions(driver);
			act.moveToElement(hoveronStars).build().perform();	  		
	  }
	  
	  public static void handlingClicks(String propertyAttribute, String ipName) throws Exception {
			WebElement buttonclick = driver.findElement(locatorread.readingPropertyValues(propertyAttribute));
			buttonclick.click();
	  }
	  
	  public static void handlingtextboxes(String propertyAttribute, String ipName) throws Exception {
			WebElement text = driver.findElement(locatorread.readingPropertyValues(propertyAttribute));
			text.sendKeys(ipName);	  		
	  	}
	  public static void handlingmousehoveringwithoutClick(String propertyAttribute, String ipName) throws Exception {
		  	WebElement membershiplink = driver.findElement(locatorread.readingPropertyValues(propertyAttribute));
			Actions act = new Actions(driver);
			act.moveToElement(membershiplink).build().perform();
	  

}
